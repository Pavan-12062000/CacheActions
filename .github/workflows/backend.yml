name: CI/CD for Node.js Backend

on:
  push:
    branches:
      - main  # Run CI/CD when code is pushed to main
  pull_request:
    branches:
      - main  # Run CI/CD for PRs to main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up job
      - name: Set up job
        run: echo "Initializing CI/CD pipeline..."

      # Step 2: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 3: Compute cache key
      - name: Compute Cache Key
        id: compute-cache-key
        run: echo "CACHE_KEY=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_ENV

      # Step 4: Cache node_modules
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ~/.npm  # Cache directory for npm dependencies
          key: ${{ env.CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 5: Print Cache Status
      - name: Print Cache Status
        run: |
          if [[ "${{ steps.cache-node-modules.outputs.cache-hit }}" == 'true' ]]; then
            echo "✅ Cache hit! Using cache key: ${{ env.CACHE_KEY }}"
          else
            echo "❌ Cache miss! Dependencies will be installed from scratch."
          fi

      # Step 6: Install dependencies
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'  # Only install if cache is missing
        run: npm ci

      # Step 7: Build the application (if required)
      - name: Build Application
        run: npm run build # Modify if your backend has a build step

      # Step 8: Run tests
      - name: Run Tests
        run: npm test

      # Step 9: Post-Job Cache Cleanup (optional)
      - name: Post Cache Cleanup
        if: always()
        run: echo "Cache will be maintained automatically by GitHub Actions"

      # Step 10: Post-run Checkout
      - name: Post-run Checkout
        if: always()
        run: echo "Post-run cleanup complete"

      # Step 11: Complete Job
      - name: Complete Job
        run: echo "Build & Test Completed!"
